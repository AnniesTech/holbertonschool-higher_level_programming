===================================
Test cases for 7-base_geometry.py
===================================

This program has a class Base Geometry
Inside of the class we have 2 methods:
1. method area: raise an exception
2. integer_validator: validate if it the type is correct of name

import module:

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Documentation
=============
Verifying if our modules an funtions are documented.

    >>> module_doc = __import__("7-base_geometry").__doc__
    >>> print(len(module_doc) > 0)
    True

    >>> class_doc = __import__("7-base_geometry").BaseGeometry.__doc__
    >>> print(len(class_doc) > 0)
    True

    >>> area_doc = __import__("7-base_geometry").BaseGeometry.area.__doc__
    >>> print(len(area_doc) > 0)
    True

    >>> integer_validator_doc = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
    >>> print(len(integer_validator_doc) > 0)
    True


Testing Cases 
==============

Checking with fucntion ``Integer_validator`` will check if type(value) is an integer, otherwhise will raise an error
Function ``Area`` is not yet implemented so it will raise an exception

Calling Area
-------------

    >>> bg = BaseGeometry()
    >>> try:
    ...     print(bg.area())
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
    ... 
    [Exception] area() is not implemented

integer>0
----------

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", 12)
    >>>

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("width", 89)
    >>>

not integer
-----------

    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    TypeError: name must be an integer

With zero
---------

    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ValueError: age must be greater than 0

Negative numbers
-----------------

    >>> bg.integer_validator("distance", -4)
    Traceback (most recent call last):
    ValueError: distance must be greater than 0
