==================================
Test cases for 2-matrix_divided.py
==================================

This program has the function that divides all elements of a matrix.
The list must have same size, and each element must be int or 
float and div argument must be int and not 0.

import module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[1, 2, 3], [4, 5, 6]]



Test Cases
===========

This program will divide each element of the matrix by div. 
In this case div has a default value of 3 in the main file

Testing basic divisions
------------------------

    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix_divided(matrix, 10)
    [[0.1, 0.2, 0.3], [0.4, 0.5, 0.6]]

    >>> matrix_divided(matrix, 1000000)
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Testing with negative numbers
------------------------------

    >>> matrix_divided(matrix , 10 - 5)
    [[0.2, 0.4, 0.6], [0.8, 1.0, 1.2]]

    >>> matrix_divided(matrix , -100000)
    [[-0.0, -0.0, -0.0], [-0.0, -0.0, -0.0]]

Testing with positive and negative floats:
-------------------------------------------

    >>> matrix_divided(matrix , -3.5)
    [[-0.29, -0.57, -0.86], [-1.14, -1.43, -1.71]]

    >>> matrix_divided(matrix , 3.5)
    [[0.29, 0.57, 0.86], [1.14, 1.43, 1.71]]

Testing infinity
=================

    >>> matrix_divided(matrix, float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

    >>> matrix_divided(matrix, float('NaN'))
    [[nan, nan, nan], [nan, nan, nan]]

TypeErrors
===========
This program can only take these arguments:
- integers and floats
- Each row of the matrix must be of the same size
- div must be a number (integer or float)
otherwise the TypeError will be raised.
With this argument:
- div canâ€™t be equal to 0
the ZeroDivisionError will be raised


Div is 0
---------

    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

Div is not int
--------------

    >>> matrix_divided(matrix, "hello")
    Traceback (most recent call last):
    TypeError: div must be a number

Rows don't have the same size
-----------------------------

    >>> matrix = [[2, 3, 4], [4, 5, 6, 7], [2, 3]]

    >>> matrix_divided(matrix, 13)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size


Matrix is not list of lists and element from list is not int or float:
---------------------------------------------------------------------------

    >>> matrix = [[2, 3, "hello"], [4, "ana", 6, 7], [2, 3]]

    >>> matrix_divided(matrix, 13)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Matrix is None
--------------

    >>> matrix_divided(None, 13)
    Traceback (most recent call last):  
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Matrix is empty
----------------

    >>> matrix = []

    >>> matrix_divided(matrix, 13)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats



Testing arguments
=================
This program has a minimun arguments needed: 2.
and has a maximum argument: 2.

    >>> matrix_divided(matrix, 16, 3)
    Traceback (most recent call last):
    TypeError: matrix_divided() takes 2 positional arguments but 3 were given

    
    >>> matrix_divided(matrix)
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
